const get{{FOREIGN_KEY_MODEL_NAME_TITLE}}{{FOREIGN_KEY_FIELD_NAME_TITLE}}s = async () => {
    if(!flag{{FOREIGN_KEY_MODEL_NAME}}{{FOREIGN_KEY_FIELD_NAME_TITLE}}s) {
        const token = await sm.getTokenSession()
        await {{MODEL_NAME_LOWER}}Controller.get{{FOREIGN_KEY_MODEL_NAME_TITLE}}{{FOREIGN_KEY_FIELD_NAME_TITLE}}(token).then(async (response) => {
            if (response.status === 200){
                let res = await response.json();
                res = res.map((item) => {
                    return {value: item.id, label: item.{{FOREIGN_KEY_FIELD_NAME}}}
                })
                set{{FOREIGN_KEY_MODEL_NAME_TITLE}}{{FOREIGN_KEY_FIELD_NAME_TITLE}}s(res);
                setFlag{{FOREIGN_KEY_MODEL_NAME_TITLE}}{{FOREIGN_KEY_FIELD_NAME_TITLE}}s(true);
            } else{
                setAlertType('Error');
                setAlertMessage('Error al cargar {{FOREIGN_KEY_MODEL_NAME}}s.')
                setError(true);
            }
        });
    }
}
